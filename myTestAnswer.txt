//1.1温度转换
//public class Main {
//
//	public static void main(String[] args) {
//		Scanner in = new Scanner(System.in);
//		int F = in.nextInt();
//		int C = (int)((F-32)/(9.0/5));
//		System.out.println(C);		
//	 }
//}
//


//2.1时间换算
//public class Main {
//
//	public static void main(String[] args) {
//		Scanner in = new Scanner(System.in);
//		int BJT = in.nextInt();
//		int UTC = 0;
//		if (BJT >= 800)
//		{
//			UTC = BJT-800;
//		}
//		else 
//		{
//			UTC = BJT+2400-800;
//		}
//		System.out.println(UTC);		
//	 }
//}


//2.2信号报告
//public class Main {
//
//	public static void main(String[] args) {
//		Scanner in = new Scanner(System.in);
//		int rawdata = in.nextInt();
//		int R = rawdata/10;
//		int S = rawdata%10;
//		switch(S){
//		case 1:
//			System.out.print("Faint signals, barely perceptible, ");
//			break;
//		case 2:
//			System.out.print("Very weak signals, ");
//			break;
//		case 3:
//			System.out.print("Weak signals, ");
//			break;
//		case 4:
//			System.out.print("Fair signals, ");
//			break;
//		case 5:
//			System.out.print("Fairly good signals, ");
//			break;
//		case 6:
//			System.out.print("Good signals, ");
//			break;
//		case 7:
//			System.out.print("Moderately strong signals, ");
//			break;
//		case 8:
//			System.out.print("Strong signals, ");
//			break;
//		case 9:
//			System.out.print("Extremely strong signals, ");
//			break;
//		}
//		
//		switch(R){
//		case 1:
//			System.out.print("unreadable.");
//			break;
//		case 2:
//			System.out.print("barely readable, occasional words distinguishable.");
//			break;
//		case 3:
//			System.out.print("readable with considerable difficulty.");
//			break;
//		case 4:
//			System.out.print("readable with practically no difficulty.");
//			break;
//		case 5:
//			System.out.print("perfectly readable.");
//			break;
//		}
//	 }
//}


//3.1奇偶个数
//public class Main {
//
//	public static void main(String[] args) {
//		Scanner in = new Scanner(System.in);
//		int number = in.nextInt();
//		int odd = 0;
//		int even = 0;
//		while( number != -1)
//		{			
//			if (number%2 == 0)
//			{
//				even += 1;
//			}
//			else
//			{
//				odd += 1;
//			}
//			number = in.nextInt();
//		}
//		System.out.print(odd+" "+even);	
//	 }
//}



//3.2 数字特征值
//public class Main {
//
//	public static void main(String[] args) {
//		Scanner in = new Scanner(System.in);
//		int number = in.nextInt();
//		int digit = 0;
//		int count = 0;
//		int result = 0;
//		int second = 1;
//		while(number>0)
//		{
//			digit = number%10;
//			number = number/10;
//			count += 1;
//			if (digit%2 == count%2)
//			{
//				result += second;
//			}
//			second *= 2;
//		}
//		System.out.println(result);
//	 }
//}


//3.3 素数和
//public class Main {
//
//	public static void main(String[] args) {
//		Scanner in = new Scanner(System.in);
//		int n = in.nextInt();
//		int m = in.nextInt();
//		int result = 0;	
////		挑选素数
//		int count = 0;
//		int number = 2;		
//		for (int i = number; count < m ; i++)
//		{
//			boolean isPrime = true;
//			for (int j = 2; j<i ; j++)
//			{
//				if (i%j == 0)
//				{
//					isPrime = false;
//					break;
//				}
//			}
//			if (isPrime == true || i == 2)
//			{
//				count += 1;
////			System.out.println("第"+count+"个素数为："+i);
//				if (count>=n)
//				{
//					result += i;
////				System.out.println("i:"+i);
//				}
//			}		
//		}
//		System.out.println(result);
//	 }
//}


//3.4念整数
//public class Main {
//
//	public static void main(String[] args) {
//		Scanner in = new Scanner(System.in);
//		int number = in.nextInt();
//		
//		if (number==0)
//		{
//			System.out.print("ling");
//		}
//		
//		else
//		{
//			if (number<0)
//			{
//				System.out.print("fu ");
//				number = -number;
//			}
//			
//			int bernum = 0;
//			int digit = 0;
//			int count = 0;
//			
//			while(number>0)
//			{
//				digit = number%10;
//				number /= 10;
//				count += 1;
//				bernum = bernum*10 + digit;
//			}
////			System.out.println(bernum);
//			
//			for (int i = count; i > 0 ; i--)
//			{			
//				digit = bernum%10;
//				bernum /= 10;
//                switch (digit){
//					case 0:
//						System.out.print("ling");
//						break;
//					case 1:
//						System.out.print("yi");
//						break;
//					case 2:
//						System.out.print("er");
//						break;
//					case 3:
//						System.out.print("san");
//						break;
//					case 4:
//						System.out.print("si");
//						break;
//					case 5:
//						System.out.print("wu");
//						break;
//					case 6:
//						System.out.print("liu");
//						break;
//					case 7:
//						System.out.print("qi");
//						break;
//					case 8:
//						System.out.print("ba");
//						break;
//					case 9:
//						System.out.print("jiu");
//						break;
//					}
//                    if (i>1)
//                    {
//                    	System.out.print(" ");
//                    }					
//				}				
//			}			
//		}	
//	}



//4.1多项式加法
//public class Main {
//
//	public static void main(String[] args) {
//		Scanner in = new Scanner(System.in);
//		//构建数组，以元素值为系数，元素脚标为幂次
//		int[] list = new int[101];
//      //分别记录幂次和系数	
//      int MC, XX; 
//      //循环两次读入两个多项式
//		for (int i = 0; i<2 ; i++)
//		{
//			do
//			{
//				MC = in.nextInt();
//				XX = in.nextInt();	
//				list[MC] += XX;							
//			}while (MC!=0);			
//		}
//		//用tag1记录目前要输出的是否是第一个值（第一个值不输出+号）
//		boolean tag1 = true;
//		for (int i=100; i>=0; i--)
//		{
//			//遍历数组list，系数不为0是进行输出
//			if (list[i]!=0) 
//			{
//				//考查是否输出+号
//				if(tag1 == false && list[i]>0)
//				{
//					System.out.print("+");
//				}
//				//输出系数，系数为1或-1时不输出，但是常数项系数为1或-1时仍输出
//				if((list[i]!=1 && list[i]!=-1) || i==0)
//				{
//					System.out.print(list[i]);
//				}
//				if(list[i]==-1)//系数为-1时输出负号
//				{
//					System.out.print("-");
//				}
//				//输出x
//				if(i!=0)
//				{
//					System.out.print("x");
//				}
//				//输出幂次
//				if(i>1)
//				{
//					System.out.print(i);
//				}
//              //已经输出过值，则tag1的值改为false
//				tag1 = false;
//			}
//		}
//		if(tag1 == true) //所有系数均为0的情况，输出0
//		{
//			System.out.print(0);
//		}
//	 }	
//}	


//4.2井字棋
//public class Main {
//
//	public static void main(String[] args) {
//		Scanner in = new Scanner(System.in);
//		int line = in.nextInt();
//		int[][] tic = new int[line][line];
//		int getnumber;
//		for (int i = 0; i<line; i++)
//		{
//			for (int j = 0; j<line; j++)
//			{
//				getnumber = in.nextInt();
//				tic[i][j] = getnumber;			
//			}
//		}
////      测试录入是否正确		
////		for (int i = 0; i<line; i++)
////		{
////			for (int j = 0; j<line; j++)
////			{
////				System.out.print(tic[i][j]);
////			}
////			System.out.println("");
////		}
//		
//		//考查每行是否存在获胜情况
//		boolean isDone = false;
//		for (int i = 0; i<line; i++)
//		{
//			boolean check = true;
//			for (int j = 1; j<line; j++)
//			{
//				if (tic[i][j]!=tic[i][j-1])
//				{
//					check = false;
//					break;
//				}
//			}
//			if (check == true)
//			{
//				if(tic[i][0]==0)
//				{
//					System.out.println("O");
//				}
//				else
//				{
//					System.out.println("X");
//				}
//				isDone = true;
//				break;				
//			}
//		}
//		
//		//没有获胜情况的话，继续考查每列是否存在获胜情况
//		if (isDone == false)
//		{
//			for (int i = 0; i<line; i++)
//			{
//				boolean check = true;
//				for (int j = 1; j<line; j++)
//				{
//					if (tic[j][i]!=tic[j-1][i])
//					{
//						check = false;
//						break;
//					}
//				}
//				if (check == true)
//				{
//					if(tic[0][i]==0)
//					{
//						System.out.println("O");
//					}
//					else
//					{
//						System.out.println("X");
//					}
//					isDone = true;
//					break;					
//				}
//			}
//		}
//		
//		//仍然没有获胜情况的话，继续考查左对角线是否存在获胜情况
//		if(isDone == false)
//		{
//			boolean check = true;
//			for(int i = 1; i<line; i++)
//			{
//				if(tic[i][i]!=tic[i-1][i-1])
//				{
//					check = false;
//					break;
//				}		
//			}
//			if (check==true)
//			{
//				if(tic[0][0]==0)
//				{
//					System.out.println("O");
//				}
//				else
//				{
//					System.out.println("X");
//				}
//				isDone = true;
//			}
//		}
//			
//			//仍然没有获胜情况的话，继续考查右对角线是否存在获胜情况	
//		if(isDone == false)
//		{
//			boolean check = true;
//			for(int i = 1; i<line; i++)
//			{
//				if(tic[i][line-1-i]!=tic[i-1][line-1-i+1])//右对角线两脚标和为line-1
//				{
//					check = false;
//					break;
//				}				
//			}
//			if (check == true)
//			{
//				
//				if(tic[0][line-1]==0)
//				{
//					System.out.println("O");
//				}
//				else
//				{
//					System.out.println("X");
//				}
//				isDone = true;
//			}		
//		}
//		//仍然没有获胜情况的话，输出nil
//		if(isDone == false)
//		{
//			System.out.println("NIL");
//		}		
//	 }	
//}	

//5.1分解质因数
//public class Main {
//	public static boolean isPrime(int a)
//	{
//		int number = a;
//		boolean isPrime = true;
//		for(int i = 2; i<a; i++)
//		{
//			if(number%i==0)
//			{
//				isPrime = false;
//				break;
//			}
//		}
//		if (a==2)
//		{
//			isPrime = true;
//		}		
//		return isPrime;
//	}
//
//	public static void main(String[] args) {
//		Scanner in = new Scanner(System.in);
//		
//		int number = in.nextInt();
//		System.out.print(number+"=");
//		
//		if(isPrime(number))
//		{
//			System.out.print(number);
//		}
//		else
//		{
//			for(int i = 2; i<=number; i++)
//			{
//				if(isPrime(i))
//				{
//					while(number%i==0 )
//					{
//						number/=i;
//						System.out.print(i);
//						if (number != 1 )
//						{
//							System.out.print("x");
//						}
//					}
//				}
//			}			
//		}
//   }	
//}


//5.2找完数
//public class Main {
//	
//	public static boolean isPerfect(int a)
//	{
//		boolean isPerfect = false;
//		int number = a;
//		int sum = 1;
//		for(int i = 2; i<number ; i++)
//		{
//			if(number%i==0)
//			{
//				sum+=i;
//			}
//		}
//		if(sum == number && number!=1)
//		{
//			isPerfect = true;
//		}		
//		return isPerfect;
//	}	
//	
//	public static void main(String[] args) {
//		Scanner in = new Scanner(System.in);
//		int n = in.nextInt();
//		int m = in.nextInt();
//		boolean tag1 = true;
//		for (int i = n; i<=m ; i++)
//		{
//			if(isPerfect(i))
//			{
//				if(tag1)
//				{
//					System.out.print(i);
//					tag1 = false;
//				}
//				else
//				{
//					System.out.print(" "+i);
//				}			
//			}			
//		}
//		if(tag1)
//		{
//			System.out.print("NIL");
//		}					
//   }	
//}

//6.1单词长度
//  public class Main {
//	
//	public static void main(String[] args) {
//		Scanner in = new Scanner(System.in);
//		String word;
//		boolean isEnd = false;
//		do
//		{
//			word = in.next();
//			if (word.endsWith("."))
//			{
//				isEnd = true;
//			}
//			if (isEnd == false)
//			{
//				System.out.print(word.length());
//				System.out.print(" ");
//			}
//			else
//			{
//				System.out.print(word.length()-1);
//			}
//		} while(isEnd == false);		
//   }	
//}


//6.2GPS数据处理
//  public class Main {
////	验证首字段的函数
//	public static boolean isGPRMC(String gps)
//	{
//		boolean isgprmc = false;
//		String s = gps;
//		if (s.startsWith("$GPRMC"))
//		{
//			isgprmc = true;
//		}
//		return isgprmc;	
//	}
//	
////	校验和的函数
//	public static boolean checkSum(String gps)
//	{
//		boolean isEqual = false;
//		String s = gps;
//		int left = s.indexOf("$");
//		int right = s.indexOf("*");
//		int DifOr = 0;
//		for(int i = left+1; i<right; i++)
//		{
//			DifOr = DifOr^s.charAt(i);
//		}
//		int result = DifOr%65536;
//		int checkSum = Integer.parseInt(s.substring(right+1), 16);
//		if(result==checkSum)
//		{
//			isEqual = true;
//		}
//		return isEqual;
//	}
//	
//	
////	验证A的函数
//	public static boolean isA (String gps)
//	{
//		boolean isA = false;
//		String s = gps;
//		int loc1 = s.indexOf(",");
//		int loc2 = s.indexOf(",", loc1+1);
//		if (s.charAt(loc2+1)=='A')
//		{
//			isA = true;
//		}		
//		return isA;
//	}
//
////获取时间字段
//	public static String rawtime(String gps) 
//	{
//		String rawtime = "";
//		String s = gps;
//		int left = s.indexOf(",");
//		int right = s.indexOf(".");
//		rawtime = s.substring(left+1, right);	
//		return rawtime;
//	}
//	
////转化为北京时间按照格式进行输出
//	public static void bjt(String rawtime)
//	{
//		String s = rawtime;
//		int hh = Integer.parseInt(s.substring(0, 2));
//		int mm = Integer.parseInt(s.substring(2, 4));
//		int ss = Integer.parseInt(s.substring(4));
//		if (hh>=16)
//		{
//			hh=hh+8-24;
//		}
//		else
//		{
//			hh=hh+8;
//		}
//		System.out.printf("%02d:%02d:%02d", hh,mm,ss);
//	}
//	
//	public static void main(String[] args) {
//		Scanner in = new Scanner(System.in);
//		String gps = in.nextLine();
//		String rawtime = "";
//		while (gps.equals("END")==false)
//		{
//			if (isGPRMC(gps) && checkSum(gps) && isA(gps))
//			{
//				rawtime = rawtime(gps);
//			}
//			gps = in.nextLine();
//		}
//		bjt(rawtime);
//		
//    }	
//}


//7.1分数
//    public class Main {
//	
//	public static void main(String[] args) {
//		Scanner in = new Scanner(System.in);
//		Fraction a = new Fraction(in.nextInt(), in.nextInt());
//		Fraction b = new Fraction(in.nextInt(),in.nextInt());
//		a.print();
//		b.print();
//		a.plus(b).print();
//		a.multiply(b).plus(new Fraction(5,6)).print();
//		a.print();
//		b.print();
//		in.close();
//	}
//}
//
//class Fraction {
//	public int son = 0;
//	public int mother = 1;
//	
//	Fraction(int a, int b){
//		son = a;
//		mother = b;
//	}
//	
//	public int max(int a, int b){
//    	int big;
//    	int small;
//    	int temp = 0;
//    	if (a>=b)
//    	{
//    		big = a;
//    		small = b;
//    	}
//    	else
//    	{
//    		big = b;
//    		small = a;
//    	}	    	
//    	while( small!= 0 )
//    	{	
//    		temp = big%small;
//    		big = small;
//    		small = temp;
//    	}
//    	return big;
//	}
//	
//	public double toDouble(){
//		double db = (double)son/mother;		
//		return db;
//	}
//	
//	public Fraction plus(Fraction r){
//		
//		int newson = son*r.mother+mother*r.son;
//		int newmom = mother*r.mother;
//		Fraction result = new Fraction(newson,newmom);	
//		return result;
//	}
//	
//	public Fraction multiply(Fraction r)
//	{
//		int newson = son*r.son;
//		int newmom = mother*r.mother;
//		Fraction result = new Fraction(newson,newmom);
//		return result;
//	}
//	
//	void print(){
//		int max = max(son,mother);
//		son = son/max;
//		mother = mother/max;
//		if (son==mother)
//		{
//			System.out.println(1);
//		}
//		else
//		{
//			System.out.println(son+"/"+mother);
//		}
//	}
//}


//7.2带秒显的时钟
//public class Main {
//	
//	public static void main(String[] args) {
//		java.util.Scanner in = new java.util.Scanner(System.in);
//		Clock clock = new Clock(in.nextInt(), in.nextInt(), in.nextInt());
//		clock.tick();
//		System.out.println(clock);
//		in.close();
//	}	
//}
//
//class Display {
//	private int value = 0;
//	private int limit = 0;
//	
//	
//	public Display(int a)
//	{
//		limit = a;		
//	}
//	
//	public void setValue(int a)
//	{
//		value = a;
//	}
//	public int getValue()
//	{
//		return value;
//	}
//	
//	public void increase()
//	{		
//			value++;
//			if (value == limit)
//			{
//				value = 0;
//			}
//	}	
//}
//
//class Clock 
//	{
//	private Display hh = new Display(24);
//	private Display mm = new Display(60);
//	private Display ss = new Display(60);
//	
//	
//	public Clock(int hour, int minute, int second)
//	{
//		hh.setValue(hour);
//		mm.setValue(minute);
//		ss.setValue(second);
//	}
//	
//	public void tick()
//	{
//		ss.increase();
//		if (ss.getValue() == 0){
//			mm.increase();
//			if (mm.getValue() == 0)
//			{
//				hh.increase();
//			}
//		}
//	}
//	
//	public String toString()
//	{
//		return String.format("%02d:%02d:%02d",hh.getValue(),mm.getValue(),ss.getValue());
//	}	
//}


//8.1里程
//public class Main {
//	
//	public static void main(String[] args) {
//		Scanner in = new Scanner(System.in);
////		city cityA = new city();
////		cityA.add();
//////		milebox mileA = new milebox(cityA.getNum());
////		milebox mileA = new milebox();
//////		mileA.setbox();
////		mileA.setBox(cityA.getNum());
////		int a = cityA.getIndex(in.next());
////		int b = cityA.getIndex(in.next());
//////		System.out.println(mileA.getMiles(a, b));	
////		System.out.println(mileA.getmile(a, b));
//		
//		city cityA = new city();
//		String cityName = in.next();
//		while(!cityName.equals("###"))
//		{
//			cityA.add(cityName);
//			cityName = in.next();
//		}
//		mile mileA = new mile();
//		int size = cityA.getNum();
//		for (int i = 0; i<size; i++)
//		{
//			for (int j = 0; j<size; j++)
//			{
//				String s = i+"x"+j;
//				mileA.add(s, in.nextInt());
//			}
//		}
//		int a = cityA.getIndex(in.next());
//		int b = cityA.getIndex(in.next());
//		System.out.println(mileA.getMile(a+"x"+b));
//		
//		
//	}
//}
//
//class city{
//	private ArrayList<String> cities = new ArrayList<String>();
//	
//	public void add(String s)
//	{
//		cities.add(s);
//	}
//	
//	public int getNum()
//	{
//		return cities.size();
//	}
//	
//	public int getIndex(String s)
//	{
//		return cities.indexOf(s);
//	}
//}
//
//class mile{
//	private HashMap<String, Integer> miles = new HashMap<String, Integer>();
//	
//	public void add(String s, int a)
//	{
//		miles.put(s, a);
//	}
//	
//	public int getMile(String s)
//	{
//		return miles.get(s);
//	}
//}
//
//
//
////class city{
////	private ArrayList<String> cities = new ArrayList<String>();
////	
////	public void add()
////	{
////		Scanner in = new Scanner(System.in);
////		String cityname = in.next();
////		while(!cityname.equals("###"))
////		{
////			cities.add(cityname);
////			cityname = in.next();
////		}
////	}
////	
////	public int getNum()
////	{
////		return cities.size();
////	}
////	
////	public int getIndex(String s)
////	{
////		
////		return cities.indexOf(s);
////	}
////	
////}
////
////class milebox{
////	private HashMap<String, Integer> miles = new HashMap<String, Integer>();
////	
////	public milebox()
////	{
////		
////	}
////	
////	public void setBox(int a)
////	{
////		Scanner in = new Scanner(System.in);
////		for (int i=0; i<a; i++)
////		{
////			for (int j=0; j<a; j++)
////			{
////				String s = i+"x"+j;
////				miles.put(s, in.nextInt());
////			}
////		}
////	}
////	
////	public int getmile(int a, int b)
////	{
////		return miles.get(a+"x"+b);
////	}
////}
//
//
////class milebox{
////	private int size = 0;
////	int[][] box;
////	
////	
////	public milebox(int a)
////	{
////		size = a;
////		box = new int[size][size];
////	}
////	
////	public void setbox()
////	{
////		Scanner in = new Scanner(System.in);
////		for (int i = 0; i<size; i++)
////		{
////			for (int j = 0; j<size; j++)
////			{
////				int mile = in.nextInt();
////				box[i][j] = mile;
////			}
////		}
////	}
////	
////	public int getMiles(int a, int b)
////	{
////		return box[a][b];
////	}		
////}
//
